local IDGenerator = require('engine/id_generator')

---@class GameObject
---@field private x number The x-coordinate of the game object.
---@field private y number The y-coordinate of the game object.
---@field protected width number The width of the game object.
---@field protected height number The height of the game object.
---@field private rotation number The rotation of the game object in degrees.
---@field protected visible boolean Whether the game object is visible. Defaults to true.
---@field private name string The name of the game object. Defaults to 'GameObject'.
---@field private id number The unique identifier for the game object, generated by IDGenerator.
---@field private children table A table to hold child game objects.
---@field init fun(self: GameObject, params: ObjectParams) Initializes the game object with the given definition.
local GameObject = class()

---@class ObjectDimensions
---@field width number The width of the game object.
---@field height number The height of the game object.

---@class ObjectPosition
---@field x number The x-coordinate of the game object.
---@field y number The y-coordinate of the game object.

---@class ObjectParams:ObjectDimensions, ObjectPosition
---@field rotation? number The rotation of the game object in degrees.
---@field visible? boolean Whether the game object is visible. Defaults to true.
---@field name? string The name of the game object. Defaults to 'GameObject'.

---GameObject is the base class for all game objects.
---@param params ObjectParams
function GameObject:init(params)
   self.x = params.x or 0
   self.y = params.y or 0
   self.width = params.width or 1
   self.height = params.height or 1
   self.rotation = params.rotation or 0
   self.visible = params.visible ~= false -- Default to true if not specified
   self.name = params.name or 'GameObject'
   self.id = IDGenerator.generate()
   self.children = {} -- Initialize an empty table for children
end

--Get the object dimensions
---@return number width
---@return number height
function GameObject:getDimensions()
   return self.width, self.height
end

-- Get the position of the game object
---@return number x
---@return number y
function GameObject:getPosition()
   return self.x, self.y
end

function GameObject:setPosition(x, y)
   self.x = x
   self.y = y
end

---@return number
function GameObject:getRotation()
   return self.rotation
end

function GameObject:getId()
   return self.id
end

function GameObject:isVisible()
   return self.visible
end

function GameObject:getChildren()
   return self.children
end

return GameObject
